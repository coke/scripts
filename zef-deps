#!/usr/bin/env raku

=begin comment

Use zef tool to identify all (nested) dependencies for a named module

This script is made available under the Artistic-2.0 license.

=end comment


our $lock = Lock.new;

sub get-info(Str $module) {
    my $output;
    react {
        my $proc = Proc::Async.new: :w,
            ['zef', 'info', '--verbose', $module];

        whenever $proc.stdout.lines {
            $lock.protect: {
                $output ~= "$_\n";
            }
        }
        whenever $proc.start {
            done
        }
    }
    my $depends = False;
    my @deps;
    for $output.lines -> $line {
        $depends = True if $line.starts-with('Depends: ');
        next unless $depends;

        next unless $line ~~ /^ \d /;  

        my @chunks = $line.split('|');
        die "oops, I missed some zef format" unless @chunks.elems == 3;
        @deps.push: @chunks[1].trim;
    }
    @deps;
}

sub MAIN(Str $module)  {
    run(<zef --help>, :out, :err) or die "Can't find zef; is your PATH correct?";

    my %deps;

    my @queue = $module;

    while @queue {
        my $module = @queue.shift;
        next if %deps{$module}:exists;
        %deps{$module} = get-info($module);
        @queue.append: |%deps{$module};
    }


    # Dump the dependencies
    sub show-deps($module, %deps, $depth=0) {
        print ' ' x $depth * 4;
        say $module;
        for @(%deps{$module}).sort -> $dep {
            show-deps($dep, %deps, $depth+1);
        }
    }

    show-deps($module, %deps);
}

